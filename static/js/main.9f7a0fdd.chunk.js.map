{"version":3,"sources":["constants.js","hooks.js","components/Search.js","components/SingleMovie.js","components/TopBtn.js","components/AllMovies.js","components/AllMoviesSearch.js","components/SingleMovieDetail.js","components/SingleMovieSearch.js","components/App.js","index.js"],"names":["require","config","useFetch","url","query","enabled","useState","data","setData","loading","setLoading","fullUrl","a","fetch","response","json","Response","console","log","useEffect","fetchUrl","Search","props","inputMovie","useRef","current","focus","changeFun","className","id","ref","onChange","placeholder","disabled","onClick","clickFun","SingleMovie","to","item","imdbID","src","Poster","alt","Title","title","TopBtn","window","onscroll","btn","document","getElementById","style","display","body","scrollTop","documentElement","scrollFun","AllMovies","allMovies","movies","map","movie","key","AllMoviesSearch","setQuery","searchEnabled","setSearchEnabled","btnDisabled","setBtnDisabled","base","toUpperCase","e","qry","target","value","hint","innerHTML","length","Metadata","img","text","SingleMovieDetail","Year","Plot","Rated","imdbRating","Released","Runtime","Genre","Director","Awards","Actors","Language","Country","imdbVotes","SingleMovieSearch","useParams","App","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.9f7a0fdd.chunk.js","sourcesContent":["require('dotenv').config();\n\n//export const API_KEY = process.env.REACT_APP_KEY;\nexport const API_KEY = \"798e7a67\";\nexport const APP_NAME = \"MOVIE SEARCH!\";\n","import { useState, useEffect } from \"react\";\n\n// Makes API requests and returns its results in json format\nexport function useFetch(url, query, enabled) {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(\"waiting\");\n    const fullUrl = url + query;\n\n    async function fetchUrl() {\n        setLoading(\"loading\");\n        try {\n            const response = await fetch(fullUrl);\n            const json = await response.json();\n            // No results found\n            if (json.Response === \"False\") {\n                setLoading(\"notFound\");\n            }\n            //\n            // Results found\n            else {\n                setData(json);\n                setLoading(\"done\");\n            }\n            //\n        } catch (error) {\n            console.log(error);\n            setLoading(\"error\");\n        }\n    }\n\n    useEffect(() => {\n        enabled && fetchUrl();\n    }, [enabled]);\n\n    return [data, loading];\n}\n","import React, { useRef, useEffect } from 'react'\n\nexport function Search(props) {\n    const inputMovie = useRef(null);\n\n    useEffect(() => {\n        inputMovie.current.focus();\n    }, [props.changeFun]);\n\n    return (\n        <>\n            <div className=\"search\">\n                <input id=\"q\" ref={inputMovie} onChange={props.changeFun} placeholder={props.placeholder}></input>\n                <button disabled={props.disabled} onClick={props.clickFun}>SEARCH</button>\n                \n                <small id=\"hint\"></small>\n            </div>\n\n        </>\n    );\n}\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\n\nexport function SingleMovie(props) {\n\n    let noImage = \"https://sciences.ucf.edu/psychology/wp-content/uploads/sites/63/2019/09/No-Image-Available.png\";\n    return (\n\n        <>\n            <div className=\"item cinema-border\">\n                <Link to={\"/title/\" + props.item.imdbID}>\n                    <img src={props.item.Poster === \"N/A\" ? noImage : props.item.Poster} alt={props.item.Title} title={props.item.Title}></img>\n                </Link>\n                <p className=\"text\">{props.item.Title}</p>\n            </div>\n        </>\n    );\n\n}","import React from 'react'\n\nexport function TopBtn(props) {\n\n    function scrollFun() {\n        let btn = document.getElementById(\"topBtn\");\n        if (btn) {\n            btn.style.display = \"none\";\n            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\n                btn.style.display = \"block\";\n            }\n        }\n    }\n\n    function goToTop() {\n        document.body.scrollTop = document.documentElement.scrollTop = 0;\n    }\n\n    window.onscroll = function () { scrollFun() };\n\n    return (\n        <>\n            <button onClick={goToTop} className=\"top\" id=\"topBtn\"><span>\n                <img title=\"Go to top\" alt=\"top\" src=\"https://img.icons8.com/material-outlined/30/000000/send-letter.png\" />\n            </span></button>\n\n        </>\n    );\n}\n","import React from \"react\";\nimport { SingleMovie } from \"./SingleMovie\";\nimport { TopBtn } from \"./TopBtn\";\n\nexport function AllMovies(props) {\n\n    const allMovies = props.movies.map((movie) => (\n        <SingleMovie key={movie.imdbID} item={movie} />\n    ));\n\n    return (\n        <>\n            <div className=\"results\">\n                {allMovies}\n            </div>\n            <TopBtn />\n        </>\n    );\n\n}","import React, { useState } from 'react'\nimport { API_KEY, APP_NAME } from \"../constants\";\nimport { useFetch } from \"../hooks\";\nimport { Search } from \"./Search\";\nimport { AllMovies } from \"./AllMovies\";\n\nexport function AllMoviesSearch() {\n    const min = 3; // Min chars count to search\n    const [query, setQuery] = useState(null);\n    const [searchEnabled, setSearchEnabled] = useState(false); // for useFetch() \n\n    const url = `https://www.omdbapi.com/?apikey=${API_KEY}&s=`;\n\n    // Custom hook to make API requests (activation depends on \"searchEnabled\" arg)\n    const [data, loading] = useFetch(url, query, searchEnabled);\n    //\n    const [btnDisabled, setBtnDisabled] = useState(true); // Submit button's status\n\n    // Enables & makes the API request\n    const search = () => {\n        setSearchEnabled(true);\n        document.title = `${query.toUpperCase()} | ${APP_NAME}`;\n    }\n    //\n\n    // Enables/disables submit button & shows chars counter\n    function enableBtn(e) {\n        setSearchEnabled(false);\n        let qry = e.target.value;\n        setQuery(qry);\n        const hint = document.getElementById(\"hint\");\n        setBtnDisabled(true);\n        hint.innerHTML = `${qry.length}/${min}`;\n\n        if (qry.length >= min){\n            setBtnDisabled(false);\n            hint.innerHTML = \"Cool! You can click on the search button now\";\n        }\n        // (qry.length >= min) ? setBtnDisabled(false) : setBtnDisabled(true);\n\n    }\n    //  \n\n    const base = (\n        <>\n            <Search\n                clickFun={search}\n                changeFun={enableBtn}\n                placeholder=\"Movies, series,etc...\"\n                disabled={btnDisabled} />\n        </>\n    );\n\n    // Actual content to be rendered, based on API request status\n    switch (loading) {\n        case \"loading\":\n            return (<> {base} <h2>Loading...</h2> </>);\n        case \"notFound\":\n            return (<> {base} <h2>No results found...</h2> </>);\n        case \"error\":\n            return (<> {base} <h2>There was an error with the server...</h2> </>);\n        case \"done\":\n            return (\n                <> {base}\n                    <h3>Results for {query}:</h3>\n                    <AllMovies movies={data.Search} />\n       \n                </>\n            );\n        default:\n            return (<> {base} </>);\n    }\n    //\n\n}","import React from 'react'\nimport { APP_NAME } from \"../constants\";\nimport { TopBtn } from \"./TopBtn\";\n\nfunction Metadata(props) {\n    return (\n        <>\n            <div className=\"detail-item\">\n                <img alt={props.alt} title={props.alt} src={props.img} />\n                <h4>{props.text}</h4>\n            </div>\n\n\n        </>\n    )\n}\n\nexport function SingleMovieDetail(props) {\n    document.title = `${props.item.Title} | ${APP_NAME}`;\n\n    return (\n        <>\n            <div className=\"movie\">\n\n                <div className=\"metadata\">\n                    <h1>{props.item.Title} ({props.item.Year})</h1>\n                    <h3>{props.item.Plot}</h3>\n                    <hr></hr>\n\n                    <Metadata img=\"https://img.icons8.com/color/48/000000/rating-circled.png\"\n                        text={props.item.Rated}\n                        alt=\"Rated\"\n                    />\n                    <Metadata img=\"https://img.icons8.com/color/48/000000/imdb.png\"\n                        text={props.item.imdbRating}\n                        alt=\"IMDB Rating\"\n                    />\n                    <Metadata img=\"https://img.icons8.com/color/48/000000/calendar.png\"\n                        text={props.item.Released}\n                        alt=\"Released date\"\n                    />\n\n\n                    <Metadata img=\"https://img.icons8.com/color/48/000000/hourglass.png\"\n                        text={props.item.Runtime}\n                        alt=\"Runtime\"\n                    />\n\n                    <Metadata img=\"https://img.icons8.com/color/48/000000/comedy.png\"\n                        text={props.item.Genre}\n                        alt=\"Genre\"\n                    />\n                    <Metadata img=\"https://img.icons8.com/color/48/000000/camping-chair.png\"\n                        text={props.item.Director}\n                        alt=\"Director\"\n                    />\n\n                    <Metadata img=\"https://img.icons8.com/color/48/000000/trophy.png\"\n                        text={props.item.Awards}\n                        alt=\"Awards\"\n                    />\n\n                    <Metadata img=\"https://img.icons8.com/color/48/000000/crowd.png\"\n                        text={props.item.Actors}\n                        alt=\"Actors\"\n                    />\n\n                    <Metadata img=\"https://img.icons8.com/color/48/000000/language-skill.png\"\n                        text={props.item.Language}\n                        alt=\"Language\"\n                    />\n\n                    <Metadata img=\"https://img.icons8.com/color/48/000000/worldwide-location.png\"\n                        text={props.item.Country}\n                        alt=\"Country\"\n                    />\n\n                    <Metadata img=\"https://img.icons8.com/color/48/000000/elections.png\"\n                        text={props.item.imdbVotes}\n                        alt=\"IMDB votes\"\n                    />\n\n                </div>\n                <div className=\"poster\">\n                    <img className=\"cinema-border\" src={props.item.Poster} alt={props.item.Title} title={props.item.Title}></img>\n\n                </div>\n            </div>\n\n            <TopBtn />\n\n        </>\n    );\n\n}","import React from 'react'\nimport { API_KEY } from \"../constants\";\nimport { useFetch } from \"../hooks\";\nimport { SingleMovieDetail } from \"./SingleMovieDetail\";\nimport { useParams } from 'react-router';\n\nexport function SingleMovieSearch() {\n    const { id } = useParams();\n    const url = `https://www.omdbapi.com/?apikey=${API_KEY}&i=`;\n    // Custom hook to make API requests (uses URL parameter \"id\" as query)\n    const [data, loading] = useFetch(url, id, true);\n    //\n\n    // Actual content to be rendered, based on API request status\n    switch (loading) {\n        case \"loading\":\n            return (<> <h2>Loading... </h2> </>);\n        case \"notFound\":\n            return (<> <h2>No results found...</h2> </>);\n        case \"error\":\n            return (<> <h2>There was an error with the server...</h2> </>);\n        case \"done\":\n            return (\n                <>  \n                    <SingleMovieDetail item={data} />\n                </>\n            );\n        default:\n            return (<> <h2> </h2> </>);\n    }\n    //\n\n}","import React from \"react\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    //Link\n} from \"react-router-dom\";\nimport { AllMoviesSearch } from \"./AllMoviesSearch\";\nimport { SingleMovieSearch } from \"./SingleMovieSearch\";\n\nexport function App() {\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <AllMoviesSearch />\n                    </Route>\n                    <Route path=\"/title/:id\">\n                        <SingleMovieSearch />\n                    </Route>\n\n                </Switch>\n                <div className=\"footer\">\n                    Handcrafted by Lourenço Costa, with:\n                <br />\n\n                    <img title=\"SASS\" alt=\"SASS\" src=\"https://img.icons8.com/color/48/000000/sass.png\" />\n                    <img title=\"React\" alt=\"React\" src=\"https://img.icons8.com/color/48/000000/react-native.png\" />\n\n                </div>\n            </div>\n        </Router>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}