{"version":3,"sources":["constants.js","hooks.js","components/Search.js","components/SingleMovie.js","components/AllMovies.js","components/AllMoviesSearch.js","components/SingleMovieDetail.js","components/SingleMovieSearch.js","components/App.js","index.js"],"names":["require","config","useFetch","url","query","enabled","useState","data","setData","loading","setLoading","fullUrl","a","fetch","response","json","Response","console","log","useEffect","fetchUrl","Search","props","inputMovie","useRef","current","focus","changeFun","className","id","ref","onChange","placeholder","disabled","onClick","clickFun","SingleMovie","to","item","imdbID","src","Poster","alt","Title","title","AllMovies","allMovies","movies","map","movie","key","AllMoviesSearch","setQuery","searchEnabled","setSearchEnabled","btnDisabled","setBtnDisabled","base","document","toUpperCase","e","qry","target","value","hint","getElementById","innerHTML","length","SingleMovieDetail","Year","Plot","Rated","imdbRating","Released","Runtime","Genre","Director","Actors","Country","Language","width","SingleMovieSearch","useParams","App","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.782e43c9.chunk.js","sourcesContent":["require('dotenv').config();\n\n//export const API_KEY = process.env.REACT_APP_KEY;\nexport const API_KEY = \"798e7a67\";\nexport const APP_NAME = \"MOVIE SEARCH!\";\n","import { useState, useEffect } from \"react\";\n\n// Makes API requests and returns its results in json format\nexport function useFetch(url, query, enabled) {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(\"waiting\");\n    const fullUrl = url + query;\n\n    async function fetchUrl() {\n        setLoading(\"loading\");\n        try {\n            const response = await fetch(fullUrl);\n            const json = await response.json();\n            // No results found\n            if (json.Response === \"False\") {\n                setLoading(\"notFound\");\n            }\n            //\n            // Results found\n            else {\n                setData(json);\n                setLoading(\"done\");\n            }\n            //\n        } catch (error) {\n            console.log(error);\n            setLoading(\"error\");\n        }\n    }\n\n    useEffect(() => {\n        enabled && fetchUrl();\n    }, [enabled]);\n\n    return [data, loading];\n}\n","import React, { useRef, useEffect } from 'react'\n\nexport function Search(props) {\n    const inputMovie = useRef(null);\n\n    useEffect(() => {\n        inputMovie.current.focus();\n    }, [props.changeFun]);\n\n    return (\n        <>\n            <div className=\"search\">\n                <input id=\"q\" ref={inputMovie} onChange={props.changeFun} placeholder={props.placeholder}></input>\n                <button disabled={props.disabled} onClick={props.clickFun}>SEARCH</button>\n                \n                <small id=\"hint\"></small>\n            </div>\n\n        </>\n    );\n}\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\n\nexport function SingleMovie(props) {\n    return (\n\n        <>\n            <div className=\"item\">\n                <Link to={\"/title/\" + props.item.imdbID}>\n                    <img src={props.item.Poster} alt={props.item.Title} title={props.item.Title}></img>\n                </Link>\n            </div>\n        </>\n\n\n        /*       <tr>\n                  <td>{props.item.Title}</td>\n                  <td>{props.item.Year}</td>\n                  <td>{props.item.Type}</td>\n                  <Link to={\"/title/\" + props.item.imdbID}>\n                      <td><img className=\"zoom\" width=\"45%\" src={props.item.Poster} alt={props.item.Title} title={props.item.Title}></img></td>\n                  </Link>\n              </tr> */\n    );\n\n}","import React from \"react\";\nimport { SingleMovie } from \"./SingleMovie\";\n\nexport function AllMovies(props) {\n\n    const allMovies = props.movies.map((movie) => (\n        <SingleMovie key={movie.imdbID} item={movie} />\n    ));\n\n    return (\n        <>\n            <div className=\"results\">\n                {allMovies}\n            </div>\n\n        </>\n    );\n\n}","import React, { useState } from 'react'\nimport { API_KEY, APP_NAME } from \"../constants\";\nimport { useFetch } from \"../hooks\";\nimport { Search } from \"./Search\";\nimport { AllMovies } from \"./AllMovies\";\n\nexport function AllMoviesSearch() {\n    const min = 3; // Min chars count to search\n    const [query, setQuery] = useState(null);\n    const [searchEnabled, setSearchEnabled] = useState(false); // for useFetch() \n\n    const url = `https://www.omdbapi.com/?apikey=${API_KEY}&s=`;\n\n    // Custom hook to make API requests (activation depends on \"searchEnabled\" arg)\n    const [data, loading] = useFetch(url, query, searchEnabled);\n    //\n    const [btnDisabled, setBtnDisabled] = useState(true); // Submit button's status\n\n    // Enables & makes the API request\n    const search = () => {\n        setSearchEnabled(true);\n        document.title = `${query.toUpperCase()} | ${APP_NAME}`;\n    }\n    //\n\n    // Enables/disables submit button & shows chars counter\n    function enableBtn(e) {\n        setSearchEnabled(false);\n        let qry = e.target.value;\n        setQuery(qry);\n        const hint = document.getElementById(\"hint\");\n        setBtnDisabled(true);\n        hint.innerHTML = `${qry.length}/${min}`;\n\n        if (qry.length >= min){\n            setBtnDisabled(false);\n            hint.innerHTML = \"Cool! You can click on the search button now\";\n        }\n        // (qry.length >= min) ? setBtnDisabled(false) : setBtnDisabled(true);\n\n    }\n    //  \n\n    const base = (\n        <>\n            <Search\n                clickFun={search}\n                changeFun={enableBtn}\n                placeholder=\"Movies, series,etc...\"\n                disabled={btnDisabled} />\n        </>\n    );\n\n    // Actual content to be rendered, based on API request status\n    switch (loading) {\n        case \"loading\":\n            return (<> {base} <h2>Loading...</h2> </>);\n        case \"notFound\":\n            return (<> {base} <h2>No results found...</h2> </>);\n        case \"error\":\n            return (<> {base} <h2>There was an error with the server...</h2> </>);\n        case \"done\":\n            return (\n                <> {base}\n                    <h3>Results for {query}:</h3>\n                    <AllMovies movies={data.Search} />\n                </>\n            );\n        default:\n            return (<> {base} </>);\n    }\n    //\n\n}","import React from 'react'\nimport {APP_NAME } from \"../constants\";\n\nexport function SingleMovieDetail(props) {\n    document.title = `${props.item.Title} | ${APP_NAME}`;\n\n    return (\n        <>\n            <p></p>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-7\">\n                        <h1>{props.item.Title} ({props.item.Year})</h1>\n                        <h6>{props.item.Plot}</h6>\n                        <hr></hr>\n                        <p>Rated: {props.item.Rated}</p>\n                        <p>IMDB rating: {props.item.imdbRating}</p>\n                        <p>Released: {props.item.Released}</p>\n                        <p>Runtime: {props.item.Runtime}</p>\n                        <p>Genre: {props.item.Genre}</p>\n                        <p>Director: {props.item.Director}</p>\n                        <p>Actors: {props.item.Actors}</p>\n                        <p>Country: {props.item.Country}</p>\n                        <p>Language: {props.item.Language}</p>\n\n                    </div>\n                    <div className=\"col-5\">\n                        <img width=\"80%\" src={props.item.Poster} alt={props.item.Title} title={props.item.Title}></img>\n\n                    </div>\n\n                </div>\n            </div>\n        </>\n    );\n\n}","import React from 'react'\nimport { API_KEY } from \"../constants\";\nimport { useFetch } from \"../hooks\";\nimport { SingleMovieDetail } from \"./SingleMovieDetail\";\nimport { useParams } from 'react-router';\n\nexport function SingleMovieSearch() {\n    const { id } = useParams();\n    const url = `https://www.omdbapi.com/?apikey=${API_KEY}&i=`;\n    // Custom hook to make API requests (uses URL parameter \"id\" as query)\n    const [data, loading] = useFetch(url, id, true);\n    //\n\n    // Actual content to be rendered, based on API request status\n    switch (loading) {\n        case \"loading\":\n            return (<> <h2>Loading... </h2> </>);\n        case \"notFound\":\n            return (<> <h2>No results found...</h2> </>);\n        case \"error\":\n            return (<> <h2>There was an error with the server...</h2> </>);\n        case \"done\":\n            return (\n                <>  \n                    <SingleMovieDetail item={data} />\n                </>\n            );\n        default:\n            return (<> <h2> </h2> </>);\n    }\n    //\n\n}","import React from \"react\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    //Link\n} from \"react-router-dom\";\nimport { AllMoviesSearch } from \"./AllMoviesSearch\";\nimport { SingleMovieSearch } from \"./SingleMovieSearch\";\n\nexport function App() {\n    return (\n        <Router>\n            <div>\n         {/*        <nav >\n                     <Link to=\"/\">MOVIE SEARCH!</Link>\n                </nav> */}\n                <Switch>\n                    <Route exact path=\"/\">\n                        <AllMoviesSearch />\n                    </Route>\n                    <Route path=\"/title/:id\">\n                        <SingleMovieSearch />\n                    </Route>\n\n                </Switch>\n            </div>\n        </Router>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}